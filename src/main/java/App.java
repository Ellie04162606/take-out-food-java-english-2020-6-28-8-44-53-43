import java.util.ArrayList;
import java.util.List;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
  private ItemRepository itemRepository;
  private SalesPromotionRepository salesPromotionRepository;

  public App(ItemRepository itemRepository, SalesPromotionRepository salesPromotionRepository) {
    this.itemRepository = itemRepository;
    this.salesPromotionRepository = salesPromotionRepository;
  }

  public String bestCharge(List<String> inputs) {
    // TODO: write code here
    List<Item> items = itemRepository.findAll();
    List<SalesPromotion> salesPromotions = salesPromotionRepository.findAll();
    List<String> halfPriceItems = salesPromotions.get(1).getRelatedItems();
    List<String> orderHalfPriceItem = new ArrayList<>();
    int totalPrice = 0;
    int promotionPrice = 0;
    int halfPricePromotion = 0;
    int deductPromotion = 0;

    StringBuilder result = new StringBuilder("============= Order details =============\n");
    for (String inputItem : inputs) {
      String[] inputItems = inputItem.split(" x ");
      for (Item item : items) {
        if (item.getId().equals(inputItems[0])) {
          int prices = (int) (item.getPrice() * Integer.parseInt(inputItems[1]));
          result
              .append(item.getName() + " x " + inputItems[1])
              .append(" = ")
              .append(prices)
              .append(" yuan\n");
          totalPrice += prices;
          for (String specialItem : halfPriceItems) {
            if (specialItem.equals(inputItems[0])) {
              halfPricePromotion += item.getPrice() * Integer.parseInt(inputItems[1]) / 2;
              orderHalfPriceItem.add(item.getName());
            }
          }
        }
      }
    }
    if (totalPrice > 30) {
      deductPromotion = 6;
    }
    if (halfPricePromotion != 0 && halfPricePromotion >= deductPromotion) {
      result.append("-----------------------------------\n");
      result.append("Promotion used:\n");
      promotionPrice = halfPricePromotion;
      result
          .append(salesPromotions.get(1).getDisplayName())
          .append(" (" + String.join("£¬", orderHalfPriceItem) + ")£¬saving ")
          .append(halfPricePromotion)
          .append(" yuan\n");
    } else if (halfPricePromotion < deductPromotion) {
      result.append("-----------------------------------\n");
      result.append("Promotion used:\n");
      promotionPrice = deductPromotion;
      result.append("Âú30¼õ6 yuan£¬saving 6 yuan\n");
    }
    result.append("-----------------------------------\n");
    result.append("Total£º").append((totalPrice - promotionPrice) + " yuan\n");
    result.append("===================================");
    return result.toString();
  }
}
